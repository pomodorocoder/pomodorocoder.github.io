<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pomodoro Coder</title>
    <link>https://pomodorocoder.github.io/</link>
    <description>Recent content on Pomodoro Coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Nov 2017 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://pomodorocoder.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Intro</title>
      <link>https://pomodorocoder.github.io/dataquest/data-structure-algorithms/memory-unicode-intro/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/dataquest/data-structure-algorithms/memory-unicode-intro/</guid>
      <description>In this mission, we&amp;rsquo;ll learn how computers store values in memory. We will look at the CIA memos data. Here&amp;rsquo;s a preview of the data
year,statement,,, 1997,&amp;quot;The FBI information included that al-Mairi&#39;s brother &amp;quot;&amp;quot;traveled to Afghanistan in 1997-1998 to train in Bin - Ladencamps.&amp;quot;&amp;quot;&amp;quot;,,, 1997,&amp;quot;The FBI information included that al-Mairi&#39;s brother &amp;quot;&amp;quot;traveled to Afghanistan in 1997-1998 to train in Bin - Ladencamps.&amp;quot;&amp;quot;&amp;quot;,,,  The file consists of one long string. To use it effectively, we&amp;rsquo;d need to parse it and convert it into rows and columns.</description>
    </item>
    
    <item>
      <title>Logistic Regression Theory</title>
      <link>https://pomodorocoder.github.io/udemy/data-science-python/machine-learning/logistic-regression/logistic-regression-theory/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/udemy/data-science-python/machine-learning/logistic-regression/logistic-regression-theory/</guid>
      <description> Logistic Regression as a method for classification Some examples of classification problems  Spam vs. Ham emails Loan Default Disease Diagnosis  Normal linear regression model won&amp;rsquo;t fit well on binary groups   </description>
    </item>
    
    <item>
      <title>The Basics of Binary</title>
      <link>https://pomodorocoder.github.io/dataquest/data-structure-algorithms/basics-of-binary/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/dataquest/data-structure-algorithms/basics-of-binary/</guid>
      <description>Computers can&amp;rsquo;t store values like strings or integers directly. Instead, they store information in binary, where the only valid numbers are 0 and 1. This system makes storing data on devices like hard drives possible.
 Base 10: we normally count in &amp;ldquo;base 10.&amp;rdquo; We call this system base 10 because there are 10 possible digits - 0 through 9 Base 2: Binary is base two, because there are only two possible digits - 0 and 1  Let&amp;rsquo;s explore how binary numbers work.</description>
    </item>
    
    <item>
      <title>Binary Addition</title>
      <link>https://pomodorocoder.github.io/dataquest/data-structure-algorithms/binary-addition/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/dataquest/data-structure-algorithms/binary-addition/</guid>
      <description>We can add binary numbers together, just like we can with base 10 numbers
In the example below:
 a is in base 10 &amp;ndash; because we have 10 possible digits, the highest value we can represent with one digit is 9 When we want to represent a value one higher, we need to add another digit. a now has two digits &amp;ndash; we incremented the invisible leading digit, which was 0 and is now 1, and set the last digit back to zero.</description>
    </item>
    
    <item>
      <title>Intro to State</title>
      <link>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/react-state/state-intro/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/react-state/state-intro/</guid>
      <description>Objectives  Define State in React Create a component with a constructor and state Describe what happens when setState is called  State Definition  Stateful Data: Data in our applications that can be changed Unlike props that cannot be changed  State Example An example:
class App extends Component { constructor(props) { super(props); this.state = {favColor: &amp;quot;red&amp;quot;}; } render() { return ( &amp;lt;div&amp;gt; My favorite color: {this.state.favColor} &amp;lt;/div&amp;gt; ) } }  setState  How to change the state here?</description>
    </item>
    
    <item>
      <title>Virtual DOM</title>
      <link>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/virtual-dom-events-forms/virtual-dom/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/virtual-dom-events-forms/virtual-dom/</guid>
      <description>Objectives  Describe the virtual DOM Define a synthetic events Describe changes in React 16  Definition  Virtual DOM is a data structure stored by React that tracks changes from one render state to the next. If something has changed from one render to the next, the browser&amp;rsquo;s DOM is updated (Reconciliation)  Synthetic Events  Supports all the native brower events, but provides a consistent API on all browsers  React 16, What&amp;rsquo;s New?</description>
    </item>
    
    <item>
      <title>Pure Functions</title>
      <link>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/react-state/pure-functions/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/react-state/pure-functions/</guid>
      <description>Objectives  Define Pure Functions  Pure Function Definition  A function with no side effects It does not modify its inputs It&amp;rsquo;s repeatable To generate the outputs, we don&amp;rsquo;t need to change the inputs  Example A.1: Not a Pure Function  The code below is not a pure function as it changes the values in the input array It is not repeatable: if we run the function multiple times it won&amp;rsquo;t generate the same results  function doubleVals(arr) { for(var i = 0; i &amp;lt; arr.</description>
    </item>
    
    <item>
      <title>React Component Architecture</title>
      <link>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/react-state/react-component-architecture/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/react-state/react-component-architecture/</guid>
      <description>Where to put state and how props and state interact with each other.
Objectives  Pass State to Child Components as props Define which components own state Use stateless functional components  How is State Shared?  State is always passed from a parent down to a child component as a prop State should not be passed to a sibling or a parent  Key Takeaway  State should be owned by 1 component  Bad Practice Never assign a prop to a state</description>
    </item>
    
    <item>
      <title>setState Gotcha!</title>
      <link>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/react-state/setstate-gocha/</link>
      <pubDate>Mon, 13 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>https://pomodorocoder.github.io/udemy/advanced-web-developer-bootcamp/react-state/setstate-gocha/</guid>
      <description>Objectives  Use a function as the first parameter to setState Add a callback to setState to determine when the state is up to date  setState that depends on previous state this.state = {counter: 1}; // New value of the counter depends on the old value this.setState({ counter: this.state.counter + 1 }) // If we do this again and for multiple times this.setState({ counter: this.state.counter + 1 })  We expect the result to be 3, however it&amp;rsquo;s actually 2.</description>
    </item>
    
    <item>
      <title>D3 Embedded with Jupyter Notebook</title>
      <link>https://pomodorocoder.github.io/frontendmaster/d3/d3-visualization-embedded-in-jupyter-notebook/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://pomodorocoder.github.io/frontendmaster/d3/d3-visualization-embedded-in-jupyter-notebook/</guid>
      <description>D3 Visualization Embedded in Jupyter Notebook  /*! * * Twitter Bootstrap * */ /*! * Bootstrap v3.3.7 (http://getbootstrap.com) * Copyright 2011-2016 Twitter, Inc. * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE) */ /*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */ html { font-family: sans-serif; -ms-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; } body { margin: 0; } article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; } audio, canvas, progress, video { display: inline-block; vertical-align: baseline; } audio:not([controls]) { display: none; height: 0; } [hidden], template { display: none; } a { background-color: transparent; } a:active, a:hover { outline: 0; } abbr[title] { border-bottom: 1px dotted; } b, strong { font-weight: bold; } dfn { font-style: italic; } h1 { font-size: 2em; margin: 0.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://pomodorocoder.github.io/_header/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://pomodorocoder.github.io/_header/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>